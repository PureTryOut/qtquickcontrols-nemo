/*
 * Copyright (C) 2013 Lucien Xu <sfietkonstantin@free.fr>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

// This class is autogenerated using themehelper.py
// Any modification done in this file will be overridden

#include "nemothemetextfield.h"

NemoThemeTextField::NemoThemeTextField(QObject *parent)
    : QObject(parent)
    , m_pointSize(24)
    , m_font("Open Sans")
{
}

QColor NemoThemeTextField::selectedTextColor() const
{
    return m_selectedTextColor;
}

void NemoThemeTextField::setSelectedTextColor(const QColor &selectedTextColor)
{
    if (m_selectedTextColor != selectedTextColor) {
        m_selectedTextColor = selectedTextColor;
        emit selectedTextColorChanged();
    }
}

QColor NemoThemeTextField::selectionColor() const
{
    return m_selectionColor;
}

void NemoThemeTextField::setSelectionColor(const QColor &selectionColor)
{
    if (m_selectionColor != selectionColor) {
        m_selectionColor = selectionColor;
        emit selectionColorChanged();
    }
}

int NemoThemeTextField::pointSize() const
{
    return m_pointSize;
}

void NemoThemeTextField::setPointSize(int pointSize)
{
    if (m_pointSize != pointSize) {
        m_pointSize = pointSize;
        emit pointSizeChanged();
    }
}

void NemoThemeTextField::setPointSizeDefault()
{
    if (m_pointSize != 24) {
        m_pointSize = 24;
        emit pointSizeChanged();
    }
}

QString NemoThemeTextField::font() const
{
    return m_font;
}

void NemoThemeTextField::setFont(const QString &font)
{
    if (m_font != font) {
        m_font = font;
        emit fontChanged();
    }
}

void NemoThemeTextField::setFontDefault()
{
    if (m_font != "Open Sans") {
        m_font = "Open Sans";
        emit fontChanged();
    }
}
